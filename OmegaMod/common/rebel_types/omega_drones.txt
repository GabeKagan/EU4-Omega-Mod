# Omega drones.
# The lore here is that the Omega will send undercover agents into countries they're at war with to kidnap citizens and assimilate them into the Omegan hive mind.
# When they win a siege, they change the culture of the province to the new Omegan culture; the Omega also gets cores on them.
# If they can enforce their demands, the entire country is annexed by the Omega. This is definitely cruel, and I might adjust this down if I feel it necessary.


omega_drones = {
    area = nation
    government = any
    defection = OME #This does not prevent defection, and I do not know why this is the case.
    independence = none
    unit_transfer = yes #The Omega will get a nice boost to their armies from defectors, presumably.
    gfx_type = culture_owner

    resilient = yes #Oh, they're nasty.
    reinforcing = yes
    general = yes
    smart = yes
    disband_on_leader_death = no 
    will_relocate = no #This seems to have caused a crash. 

    artillery = 0.1
    infantry = 0.6
    cavalry = 0.3

    morale = 1.2

    # Possible handle actions
    handle_action_negotiate = yes
    handle_action_stability = yes
    handle_action_build_core = yes
    handle_action_send_missionary = yes 

    #Omega drones should only spawn on normal or higher difficulty, and only for countries at war with the Omega.
    #However, when they can spawn, they should spawn exclusively.
    spawn_chance = {
        factor = 1

        #Get these modifiers working!
        #modifier = {
        #    factor = 0
        #    owner = { has_global_flag = no_drone_rebels }
        #}


        #This one seems to work. There used to be an "owner != OME" type thing, but this should obsolete it.
        modifier = {
            factor = 9999
            owner = { 
                war_with = OME 
                is_neighbor_of = OME #This should make the Omega more sensical in some ways.  
            }
        }
        modifier = {
            factor = 9999
            owner = { 
                has_country_flag = vulnerable_to_drones #Borders mean nothing during the insurrection.
            }  
        }
    }

    # This is checked for EACH province in the Area of Operations
    # Maybe more complicated movement logic later?
    movement_evaluation = {
        factor = 1
        modifier = {
            factor = 0.001
            controlled_by = REB
        }
        #Omega drones don't move between nations, so this might not be necessary.
        #modifier = {
        #    factor = 0
        #    owner = OME #Drone rebels will not move into Omegan territory.
        #}
        modifier = {
            factor = 1.5
            unrest = 2
        }
        modifier = {
            factor = 1.5
            unrest = 4
        }
        modifier = {
            factor = 1.5
            unrest = 6
        }
        modifier = {
            factor = 10
            is_capital = yes #They should favor the capital but not quite make a beeline for it.
        }
    }

    # Province Scope
    siege_won_trigger = {
        always = yes #Only for the sake of having something here
    }
    siege_won_effect = {
        #change_culture = omegan #Apparently, you can't change culture on rebel sieges.
        add_core = OME
        #Reduced the severity of siege-induced Omega drones, but moving them around ought to be amazing.
        #random_owned_province doesn't seem to work.
        spawn_rebels = {
            type = omega_drones
            size = 1 #Because sieging is potentially so much easier from 1.12 onwards.
        }
    }

    # Country scope
    can_negotiate_trigger = {
        is_at_war = no
    }
    
    # Country scope
    can_enforce_trigger = {
        always = yes
    }

    # Localisation for their demands; see templates in text_l_english.yml
    demands_description = "omega_drones_demand" 

    # Country Scope 
    demands_enforced_effect = {
        add_prestige = -200
        every_owned_province = {
            #Uncomment this as a test once the drones spawn properly.
            #change_culture = omegan 
            add_core = OME
            #Experiment
            OME = {
                inherit = ROOT
            }

        }
    }
}